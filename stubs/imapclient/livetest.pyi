from .config import create_client_from_config as create_client_from_config, parse_config_file as parse_config_file
from .fixed_offset import FixedOffset as FixedOffset
from .imapclient import DELETED as DELETED, IMAPClient as IMAPClient, RECENT as RECENT
from .response_types import Address as Address, Envelope as Envelope
from .test.util import unittest as unittest
from .util import to_bytes as to_bytes, to_unicode as to_unicode
from typing import Any, Optional

SIMPLE_MESSAGE: str
MULTIPART_MESSAGE: Any
SMILE: str
MICRO: str
SMILE_MESSAGE: Any

class _TestBase(unittest.TestCase):
    conf: Any = ...
    use_uid: bool = ...
    @classmethod
    def setUpClass(cls) -> None: ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    @classmethod
    def tearDownClass(cls) -> None: ...
    def skip_unless_capable(self, capability: Any, name: Optional[Any] = ...) -> None: ...
    def just_folder_names(self, dat: Any): ...
    def all_test_folder_names(self): ...
    def all_sub_test_folder_names(self): ...
    def clear_test_folders(self) -> None: ...
    def get_folder_depth(self, folder: Any): ...
    def clear_folder(self, folder: Any) -> None: ...
    def add_prefix_to_folder(self, folder: Any): ...
    def add_prefix_to_folders(self, folders: Any): ...
    def unsub_all_test_folders(self) -> None: ...
    def is_gmail(self): ...
    def is_fastmail(self): ...
    def is_exchange(self): ...
    def append_msg(self, msg: Any, folder: Optional[Any] = ...) -> None: ...

class TestGeneral(_TestBase):
    def test_alternates(self) -> None: ...
    def test_capabilities(self) -> None: ...
    def test_namespace(self) -> None: ...
    def test_select_and_close(self) -> None: ...
    def test_select_read_only(self) -> None: ...
    def test_list_folders(self) -> None: ...
    def test_gmail_xlist(self) -> None: ...
    def test_xlist(self) -> None: ...
    def test_subscriptions(self) -> None: ...
    def test_folders(self) -> None: ...
    def run_folder_tests(self, folder_names: Any, folder_encode: Any) -> None: ...
    def test_rename_folder(self) -> None: ...
    def test_status(self) -> None: ...
    def test_idle(self): ...
    def test_noop(self) -> None: ...

def createUidTestClass(conf: Any, use_uid: Any): ...
def quiet_logout(client: Any) -> None: ...
def maybe_lower(val: Any): ...
def have_matching_types(a: Any, b: Any, type_or_types: Any): ...
def argv_error(msg: Any) -> None: ...
def parse_argv(): ...
def probe_host(config: Any): ...
def main() -> None: ...

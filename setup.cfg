[coverage:run]
branch = True
command_line = -m unittest discover test_phile
omit =
  # Usually requires full-fletched set up to use.
  */__main__.py
  # Uses pyninput which requires GUI.
  phile/hotkey.py
source = phile

[coverage:report]
fail_under = 100
show_missing = True
skip_covered = True

[mypy]
mypy_path = stubs
show_error_codes = True
strict = True

[pylint.FORMAT]
max-line-length = 73

[pylint.MESSAGES CONTROL]
disable =
  missing-function-docstring,
  no-self-use,
  too-many-public-methods,

[tox:tox]
skipsdist = True

[testenv]
commands =
  {envpython} -m yapf --diff --recursive phile setup.py test_phile
  {envpython} -m mypy \
    --package phile \
    --package test_phile \
    --package docs
  {envpython} -m mypy setup.py
  {envpython} -m coverage erase
  {envpython} -m coverage run
  {envpython} -m coverage report
  {envpython} -m docs clean
  {envpython} -m docs html
extras = dev
usedevelop = True

[yapf]

blank_line_before_nested_class_or_def = True
# class IsLikeATitle:
#
#     def add_a_new_line_to_highlight_it():
#         pass
#
#     def and_also_gives_consistency_in_new_line_before_def():
#         pass
#

based_on_style = pep8
# Default Python3 style.

coalesce_brackets = True
# allow_consecutive_brackets([
#     to_save_both_horizontal_and_vertical_spaces,
#     especially_in_edge_cases_with_lots_of_brackets,
#     when_each_bracket_would_indent_one_level,
# ])

column_limit = 73
# Personal preference.

dedent_closing_brackets = True
# this_function(
#     closes_bracket,
#     with_this_function_indent_level,
#     rather_than_argument_indent_level,
# )
# 'so we can tell what the bracket is closing'

indent_dictionary_value = True
# {
#     'if dictionary key and value does not fit on the same line':
#         'and if value is allowed to go on a second line,'
#         'then indent the value after the line break.',
#     'this lets the reader know visually': 'where the value is',
# }

split_arguments_when_comma_terminated = True
# one_line_per_argument(
#     if_there_are_multiple,
#     and_ends_with_a_comma,
# )
# 'Allows for override, when one line per item is preferred.'

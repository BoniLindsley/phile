[coverage:run]
branch = True
command_line = -m unittest discover -v test_phile
omit =
  # Usually requires full-fletched set up to use.
  */__main__.py
  # Uses pyninput which requires GUI.
  phile/hotkey/pynput.py
  # May be covered later. Touches on inner workings of PySide2.
  phile/capability/pyside2.py
  # Testing it requires setting up all capabilities.
  # A little too big to test.
  phile/launcher/defaults.py
  # Uses QtWidgets which prints an error for every sizing event.
  # "This plugin does not support propagateSizeHints()"
  phile/notify/pyside2.py
  phile/tray/pyside2_window.py
source = phile

[coverage:report]
exclude_lines =
    pragma: no cover
    @typing.overload
fail_under = 100
show_missing = True
skip_covered = True

[mypy]
mypy_path = stubs
show_error_codes = True
strict = True

[pylint.BASIC]
# Violation of naming convention that should be accepted.
good-names =
  # Used by convention.
  _T_co,  # TypeVar name.
  # Standard libraries.
  asyncSetUp,  # Used by unittest.
  do_EOF,  # Used by cmd.
  setUp,  # Used by unittest.
  # PySide2
  QtCore,
  test_QtCore,
  # PySide2.QtCore
  QCoreApplication,
  # PySide2.QtCore.QObject
  customEvent,
  # PySide2.QtWidgets.QWidget
  changeEvent,
  closeEvent,
  hideEvent,
  keyPressEvent,
  keyReleaseEvent,
  resizeEvent,
  showEvent,

[pylint.FORMAT]
max-line-length = 73

[pylint.MESSAGES CONTROL]
disable =
  fixme,  # Not every TODO is urgent. Especially with no issue tracker.
  # Global statements are already explicit.
  # Not using per-case diables which will end up being used n every case.
  # By doing a disable here, finding them when necessary will be easier.
  global-statement,
  missing-class-docstring,
  missing-function-docstring,
  missing-module-docstring,
  no-self-use,
  too-few-public-methods,
  too-many-ancestors,
  too-many-instance-attributes,
  # Having too many lines it not necessary an indication of issues.
  too-many-lines,
  too-many-public-methods,

[tox:tox]
skipsdist = True

[testenv]
commands =
  {envpython} -m black --check --diff phile test_phile setup.py docs
  {envpython} -m mypy \
    --package phile \
    --package test_phile \
    --package docs
  {envpython} -m mypy setup.py
  {envpython} -m coverage erase
  {envpython} -m coverage run
  {envpython} -m coverage report
extras = dev
usedevelop = True
